# -*- mode: ruby -*-
# vi: set ft=ruby :

# Author: Adrian Farnell
# DateTime : Sat 26th Jan, 22:48 (only changes in folder helloworldWebApp)

#config that impacts vagrant (use v2 vagrant spec)
Vagrant.configure("2") do |config|
  
    #configure a proxy vm
    config.vm.define "proxy1" do |proxy|
        
        #specify template to download from hashicorp (see readme for why 14.04 was swapped out)
        #proxy.vm.box = "puppetlabs/ubuntu-14.04-64-nocm"
        proxy.vm.box = "ubuntu/xenial64"
        
        #hostname of the resultant VM (start of personalisation of template)
        proxy.vm.hostname = "proxy1"

        #define the networking for the VM (forward local port 18080 to port 80 inside the VM)
        proxy.vm.network "forwarded_port", guest: 80, host: 18080, host_ip: "127.0.0.1", auto_correct:true
        proxy.vm.network "forwarded_port", guest: 443, host: 18443, host_ip: "127.0.0.1", auto_correct:true
        proxy.vm.network :private_network, ip: "192.168.56.150"

        #using chef to install nginx
        proxy.vm.provision :chef_solo do |chef|
            chef.run_list = [
                "recipe[nginx]",
                "recipe[sudoConfig]",
            ]
        end

        #using shell script as lsof exists on all Linux boxes.
        proxy.vm.provision "shell", inline: <<-SHELL
            if lsof -Pi :80 -sTCP:LISTEN -t > /dev/null; then
                echo "proxy1 nginx is running"
            else
                echo "proxy1 nginx is not running"
            fi
            SHELL

        #customise the hardware, virtualbox as the hypervisor. 
        proxy.vm.provider :virtualbox do |v|
            v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            v.customize ["modifyvm", :id, "--memory", 512]
            v.customize ["modifyvm", :id, "--name", "proxy1"]
        end

    end

    config.vm.define "web2" do |web|
        web.vm.box = "ubuntu/xenial64"
        web.vm.hostname = 'web2'

        web.vm.network :private_network, ip: "192.168.56.152"

        web.vm.provider :virtualbox do |v|
            v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            v.customize ["modifyvm", :id, "--memory", 512]#      v.customize ["modifyvm", :id, "--name", "web2"]
        end

        web.vm.provision :chef_solo do |chef|
            chef.run_list = [
            "recipe[nginx]",
            "recipe[sudoConfig]",
            "recipe[dotnetCore]",
            "recipe[webapp]"     
          ]
        end

        web.vm.provision "shell", inline: <<-SHELL
            wget -S http://localhost:5000
        SHELL

    end

    config.vm.define "web3" do |web|
        web.vm.box = "ubuntu/xenial64"
        web.vm.hostname = 'web3'

        web.vm.network :private_network, ip: "192.168.56.153"

        web.vm.provider :virtualbox do |v|
            v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
            v.customize ["modifyvm", :id, "--memory", 512]
            v.customize ["modifyvm", :id, "--name", "web3"]
        end

        web.vm.provision :chef_solo do |chef|
            chef.run_list = [
            "recipe[nginx]",
            "recipe[sudoConfig]",
            "recipe[dotnetCore]",
            "recipe[webapp]"

        ]
        end

        web.vm.provision "shell", inline: <<-SHELL
            wget -S http://localhost:5000
        SHELL
    end     

end